[
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540028545.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "Nate Burgess",
                "fallback": "Nate Burgess moved the card Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc. from EDHREC New Features One Day... to EDHREC Let's Do Soon.",
                "text": "Moved *<https:\/\/trello.com\/c\/AGIyAWZO|Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.>* from *EDHREC New Features One Day...* to *EDHREC Let's Do Soon*.",
                "id": 1,
                "author_link": "https:\/\/trello.com\/nateburgess",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/cafb148fbc6a0bb6e514f0a5b7cc9737\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540028627.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "Nate Burgess",
                "fallback": "Nate Burgess commented on Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.: \"look at nightly.make_decks_table(cardview, tribe)\"",
                "text": "look at nightly.make_decks_table(cardview, tribe)",
                "pretext": "New comment on *<https:\/\/trello.com\/c\/AGIyAWZO|Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.>*",
                "id": 1,
                "author_link": "https:\/\/trello.com\/nateburgess",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/cafb148fbc6a0bb6e514f0a5b7cc9737\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540029049.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "Nate Burgess",
                "fallback": "Nate Burgess commented on Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.: \"string together html table and pass as description to make_page\"",
                "text": "string together html table and pass as description to make_page",
                "pretext": "New comment on *<https:\/\/trello.com\/c\/AGIyAWZO|Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.>*",
                "id": 1,
                "author_link": "https:\/\/trello.com\/nateburgess",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/cafb148fbc6a0bb6e514f0a5b7cc9737\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540029694.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "Nate Burgess",
                "fallback": "Nate Burgess renamed the card \"Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.\" to Add a new page for \"all commanders\"..",
                "text": "Renamed the card \"Add a new page for \"all commanders\". I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.\" to *<https:\/\/trello.com\/c\/AGIyAWZO|Add a new page for \"all commanders\".>*.",
                "id": 1,
                "author_link": "https:\/\/trello.com\/nateburgess",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/cafb148fbc6a0bb6e514f0a5b7cc9737\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540029698.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "Nate Burgess",
                "fallback": "Nate Burgess updated the description of Add a new page for \"all commanders\"..",
                "text": " I'm thinking a table that has each commander, with columns like average number of enchantments, average budget, number of decks, number of decks in the past week, number of decks in the past month, number of decks all time. This would replace the top commanders page. Columns can be sortable, maybe we have some filters like only show me commanders with red in them, etc.",
                "pretext": "Updated the description of *<https:\/\/trello.com\/c\/AGIyAWZO|Add a new page for \"all commanders\".>*.",
                "id": 1,
                "author_link": "https:\/\/trello.com\/nateburgess",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/cafb148fbc6a0bb6e514f0a5b7cc9737\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540087737.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "David Keatts",
                "fallback": "David Keatts moved the card Cache wordpress results or otherwise make wordpress stuff not take several minutes upon every initialization from Doing to Done in Oct '18.",
                "text": "Moved *<https:\/\/trello.com\/c\/du7slD5a|Cache wordpress results or otherwise make wordpress stuff not take several minutes upon every initialization>* from *Doing* to *Done in Oct '18*.",
                "id": 1,
                "author_link": "https:\/\/trello.com\/davidkeatts1",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/fe732598dc0f8df89403798d4bfa6ed9\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540088064.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "David Keatts",
                "fallback": "David Keatts attached TTLCache to card Cache wordpress results or otherwise make wordpress stuff not take several minutes upon every initialization.",
                "text": "Attached *<https:\/\/cachetools.readthedocs.io\/en\/latest\/#cachetools.TTLCache|TTLCache>* to *<https:\/\/trello.com\/c\/du7slD5a|Cache wordpress results or otherwise make wordpress stuff not take several minutes upon every initialization>*.",
                "id": 1,
                "author_link": "https:\/\/trello.com\/davidkeatts1",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/fe732598dc0f8df89403798d4bfa6ed9\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1540088876.000100",
        "username": "Trello",
        "bot_id": "BB04ESWBZ",
        "attachments": [
            {
                "author_name": "David Keatts",
                "fallback": "David Keatts commented on Cache wordpress results or otherwise make wordpress stuff not take several minutes upon every initialization: \"core\/cache.py added, core\/wordpress.py rewritten to use it\n\nthe cache is fairly simple, ~100 line of code.  it's built on 2 things: (1) a postgres table that's essentially used as a key\/value store, and (2) an in-memory TTLCache (cachetools) whose key\/value entries expire after 5 minutes.\n\nso now the wordpress module is 2 parts: getters and a batch updater.  all the getter methods run instantly because they're just querying postgres - no expensive python computations whatsoever.  the batch script takes 5-15 minutes to run.\n\nthe nicest part of this is - the api processes no longer have to be killed\/restarted.  with the wordpress batch updater running independently, the api will naturally get new data when the TTLCache entries expire and it makes a db call.\n\nthere is still more room for optimization to be made to both modules (e.g. batch getter and setter for cache, wordpress could update more frequently if fetching updates took seconds instead of minutes).  but this should be good enough for now.\n\nnext use case for cache.py is the internal pricing api.\"",
                "text": "core\/cache.py added, core\/wordpress.py rewritten to use it\n\nthe cache is fairly simple, ~100 line of code.  it's built on 2 things: (1) a postgres table that's essentially used as a key\/value store, and (2) an in-memory TTLCache (cachetools) whose key\/value entries expire after 5 minutes.\n\nso now the wordpress module is 2 parts: getters and a batch updater.  all the getter methods run instantly because they're just querying postgres - no expensive python computations whatsoever.  the batch script takes 5-15 minutes to run.\n\nthe nicest part of this is - the api processes no longer have to be killed\/restarted.  with the wordpress batch updater running independently, the api will naturally get new data when the TTLCache entries expire and it makes a db call.\n\nthere is still more room for optimization to be made to both modules (e.g. batch getter and setter for cache, wordpress could update more frequently if fetching updates took seconds instead of minutes).  but this should be good enough for now.\n\nnext use case for cache.py is the internal pricing api.",
                "pretext": "New comment on *<https:\/\/trello.com\/c\/du7slD5a|Cache wordpress results or otherwise make wordpress stuff not take several minutes upon every initialization>*",
                "id": 1,
                "author_link": "https:\/\/trello.com\/davidkeatts1",
                "author_icon": "http:\/\/trello-avatars.s3.amazonaws.com\/fe732598dc0f8df89403798d4bfa6ed9\/30.png",
                "color": "0079BF",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ]
    },
    {
        "client_msg_id": "418e0173-bd06-43d3-b452-d392ee5d7d85",
        "type": "message",
        "text": "tl;dr you don’t need to `skiparticles=True` any more because that wordpress shit is now a cron job",
        "user": "U28TLDP0R",
        "ts": "1540089112.000100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "1f40af6b-610e-4c64-af90-64ee48159948",
        "type": "message",
        "text": "all the wordpress getters run instantly now",
        "user": "U28TLDP0R",
        "ts": "1540089140.000100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "8ebf259d-820c-4dae-9e0e-2c4d0d86182f",
        "type": "message",
        "text": "and it’s built in such a way that any of our modules with in-memory caches could easily use cache.py",
        "user": "U28TLDP0R",
        "ts": "1540089234.000100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "214e9f67-2751-445e-a638-09a439bdbd54",
        "type": "message",
        "text": "<@U28TLDP0R> a bunch of articles from 2017 are on the front page",
        "user": "U286Q175Y",
        "ts": "1540091879.000100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "4b7e67ba-3c18-40d0-a595-9fe3a89e95a7",
        "type": "message",
        "text": "hmmk",
        "user": "U28TLDP0R",
        "ts": "1540091937.000100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    }
]
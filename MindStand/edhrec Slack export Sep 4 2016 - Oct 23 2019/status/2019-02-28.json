[
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551341519.001800",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.47289023186575 (28\/02\/19 07:56:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T08:11:58.466+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T08:11:58.511Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.47289023186575 (28\/02\/19 07:56:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T08:11:58.466+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T08:11:58.511Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551344879.001900",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.40208217561982 (28\/02\/19 08:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T09:07:58.508+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T09:07:58.537Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.40208217561982 (28\/02\/19 08:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T09:07:58.508+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T09:07:58.537Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551348479.002000",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.19491293873247 (28\/02\/19 09:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T10:07:58.455+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T10:07:58.490Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.19491293873247 (28\/02\/19 09:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T10:07:58.455+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T10:07:58.490Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551352079.002100",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.46249999998449 (28\/02\/19 10:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T11:07:58.451+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T11:07:58.479Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.46249999998449 (28\/02\/19 10:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T11:07:58.451+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T11:07:58.479Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551355919.002200",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.39928336571921 (28\/02\/19 11:56:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T12:11:58.450+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T12:11:58.478Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.39928336571921 (28\/02\/19 11:56:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T12:11:58.450+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T12:11:58.478Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551362879.002300",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.59583333336438 (28\/02\/19 13:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T14:07:58.457+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T14:07:58.485Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.59583333336438 (28\/02\/19 13:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T14:07:58.457+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T14:07:58.485Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1551366479.002400",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.13541666666667 (28\/02\/19 14:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T15:07:58.463+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T15:07:58.485Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [91.13541666666667 (28\/02\/19 14:52:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-02-28T15:07:58.463+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-02-28T15:07:58.485Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[BAD] \/usr\/share\/nginx\/html\/commanders\/omnath-locus-of-mana.html has not been updated in the past 30 hours",
        "ts": "1551369742.002500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-02-28 17:00:12,817 ERROR not well-formed (invalid token): line 2, column 11\n2019-02-28 17:00:12,817 ERROR <!DOCTYPE html>\n&lt;html lang=en&gt;\n  &lt;meta charset=utf-8&gt;\n  &lt;meta name=viewport content=\"initial-scale=1, minimum-scale=1, width=device-width\"&gt;\n  &lt;title&gt;Error 500 (Server Error)!!1&lt;\/title&gt;\n  &lt;style&gt;\n    *{margin:0;padding:0}html,code{font:15px\/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* &gt; body{background:url(\/\/www.google.com\/images\/errors\/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(\/\/www.google.com\/images\/branding\/googlelogo\/1x\/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(\/\/www.google.com\/images\/branding\/googlelogo\/2x\/googlelogo_color_150x54dp.png) no-repeat 0% 0%\/100% 100%;-moz-border-image:url(\/\/www.google.com\/images\/branding\/googlelogo\/2x\/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(\/\/www.google.com\/images\/branding\/googlelogo\/2x\/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}\n  &lt;\/style&gt;\n  &lt;a href=\/\/www.google.com\/&gt;&lt;span id=logo aria-label=Google&gt;&lt;\/span&gt;&lt;\/a&gt;\n  &lt;p&gt;&lt;b&gt;500.&lt;\/b&gt; &lt;ins&gt;That’s an error.&lt;\/ins&gt;\n  &lt;p&gt;The server encountered an error and could not complete your request.&lt;p&gt;If the problem persists, please &lt;A HREF=\"http:\/\/www.google.com\/support\/\"&gt;report&lt;\/A&gt; your problem and mention this error message and the query that caused it.  &lt;ins&gt;That’s all we know.&lt;\/ins&gt;\n\n2019-02-28 17:00:12,818 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/batch\/youtubemonitor.py\", line 303, in &lt;module&gt;\n    for entry in get_entries(playlist):\n  File \"\/home\/ubuntu\/edhrec\/batch\/youtubemonitor.py\", line 259, in get_entries\n    entries = xml_pars.getElementsByTagName('entry')\nUnboundLocalError: local variable 'xml_pars' referenced before assignment\n```",
        "ts": "1551373051.002600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[GOOD] \/usr\/share\/nginx\/html\/decks\/zedruu-the-greathearted.html has been updated!",
        "ts": "1551380542.002700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-02-28 20:55:06,696 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 607, in make_commander\n    tribelinks2=data['tribelinks2']\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 308, in make_page\n    f.write(ENV.get_template(template_name).render(repls2))\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 969, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 742, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/_compat.py\", line 36, in reraise\n    raise value.with_traceback(tb)\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/panels.html\", line 74, in &lt;module&gt;\n    {% endfor %}\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 966, in render\n    return concat(self.root_render_func(self.new_context(vars)))\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 1, in &lt;module&gt;\n    {% extends \"base.html\" %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/base.html\", line 37, in &lt;module&gt;\n    {% block content %}{% endblock %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 6, in &lt;module&gt;\n    {% include 'panels.html' %}\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 742, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/_compat.py\", line 36, in reraise\n    raise value.with_traceback(tb)\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/panels.html\", line 74, in &lt;module&gt;\n    {% endfor %}\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 459, in _parse\n    return Parser(self, source, name, encode_filename(filename)).parse()\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 893, in parse\n    result = nodes.Template(self.subparse(), lineno=1)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 875, in subparse\n    rv = self.parse_statement()\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 122, in parse_statement\n    return getattr(self, 'parse_' + self.stream.current.value)()\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 201, in parse_if\n    'name:endif'))\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 162, in parse_statements\n    self.fail_eof(end_tokens)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 96, in fail_eof\n    return self._fail_ut_eof(None, stack, lineno)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 82, in _fail_ut_eof\n    self.fail(' '.join(message), lineno)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/parser.py\", line 51, in fail\n    raise exc(msg, lineno, self.name, self.filename)\njinja2.exceptions.TemplateSyntaxError: Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.\n```",
        "ts": "1551387145.002800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\nExpecting value: line 1 column 1 (char 0)\nmultiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \".\/nightly.py\", line 41, in _make_commanders_p\n    make_decks_cmdr(cmdr, skipdecks=skipdecks)\n  File \".\/nightly.py\", line 731, in make_decks_cmdr\n    sims[list(deckurls)[0]] = []\n  File \".\/nightly.py\", line 718, in make_deck\n    cardlists=cardlists,\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 206, in make_page\n    if cardview[0].is_commander:\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 268, in load\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 319, in loads\n    return _default_decoder.decode(s)\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 881, in nightly\n    make_partner_commanders(onlydecks=onlydecks)\n  File \".\/nightly.py\", line 766, in make_commanders\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
        "ts": "1551388166.002900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-02-28 21:12:08,056 ERROR Expecting value: line 1 column 1 (char 0)\n2019-02-28 21:12:08,082 ERROR multiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \".\/nightly.py\", line 41, in _make_commanders_p\n    make_decks_cmdr(cmdr, skipdecks=skipdecks)\n  File \".\/nightly.py\", line 731, in make_decks_cmdr\n    sims[list(deckurls)[0]] = []\n  File \".\/nightly.py\", line 718, in make_deck\n    cardlists=cardlists,\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 206, in make_page\n    if cardview[0].is_commander:\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 268, in load\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 319, in loads\n    return _default_decoder.decode(s)\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 881, in nightly\n    make_partner_commanders(onlydecks=onlydecks)\n  File \".\/nightly.py\", line 766, in make_commanders\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n```",
        "ts": "1551388166.003000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "client_msg_id": "1a1b9184-4972-46e1-b570-f59a4fcdea51",
        "type": "message",
        "text": "well at least it made it to make_partner_commanders",
        "user": "U28TLDP0R",
        "ts": "1551388249.003300",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "eefd0af8-e4a8-413f-9813-0e44303378f6",
        "type": "message",
        "text": "lol",
        "user": "U286Q175Y",
        "ts": "1551388347.003500",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1551388368.003600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "client_msg_id": "3860e513-2209-4e08-a69f-d4f7947063d6",
        "type": "message",
        "text": "you know that meme with the wrestling guy",
        "user": "U286Q175Y",
        "ts": "1551388383.003900",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "b30c7451-ba20-4fec-9375-7c60567ba3d5",
        "type": "message",
        "text": "hmm leme findi t",
        "user": "U286Q175Y",
        "ts": "1551388389.004100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "06416514-3490-4e98-b9f5-d04ef37f33de",
        "type": "message",
        "text": "here is an example",
        "user": "U286Q175Y",
        "ts": "1551388426.004300",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "FGKRY8M99",
                "created": 1551388426,
                "timestamp": 1551388426,
                "name": "image.png",
                "title": "Pasted image at 2019-02-28, 4:13 PM",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U286Q175Y",
                "editable": false,
                "size": 808127,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T286HM2F3-FGKRY8M99\/image.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T286HM2F3-FGKRY8M99\/download\/image.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T286HM2F3-FGKRY8M99-f030f0785c\/image_64.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T286HM2F3-FGKRY8M99-f030f0785c\/image_80.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T286HM2F3-FGKRY8M99-f030f0785c\/image_360.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "thumb_360_w": 360,
                "thumb_360_h": 360,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T286HM2F3-FGKRY8M99-f030f0785c\/image_480.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "thumb_480_w": 480,
                "thumb_480_h": 480,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T286HM2F3-FGKRY8M99-f030f0785c\/image_160.png?t=xoxe-76221716513-794073583234-794073583266-1ff3cf69954d6ebcea7887b8cddaed05",
                "image_exif_rotation": 1,
                "original_w": 600,
                "original_h": 600,
                "permalink": "https:\/\/edhrec.slack.com\/files\/U286Q175Y\/FGKRY8M99\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T286HM2F3-FGKRY8M99-8da4cf33c7",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "user": "U286Q175Y",
        "display_as_bot": false,
        "ts": "1551388428.004400",
        "client_msg_id": "f05c754d-0347-45ed-9bee-7f616f2e6038"
    },
    {
        "client_msg_id": "a320f140-4b9e-4369-9686-923f7ff9bbff",
        "type": "message",
        "text": "yup",
        "user": "U28TLDP0R",
        "ts": "1551388443.005000",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "f0d9890b-6c55-4d78-9e25-fa1cfaa02817",
        "type": "message",
        "text": "first square is `[GOOD] \/usr\/share\/nginx\/html\/decks\/zedruu-the-greathearted.html has been updated!`",
        "user": "U286Q175Y",
        "ts": "1551388443.005100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "256c160c-2095-4915-830d-254890a08c08",
        "type": "message",
        "text": "second square is capsize",
        "user": "U286Q175Y",
        "ts": "1551388448.005300",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "b87be991-fbd6-45b6-8608-b228f35c2f70",
        "type": "message",
        "text": "third square is nightly complete",
        "user": "U286Q175Y",
        "ts": "1551388452.005500",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "9ed606f95171",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/105434809396_9ed606f951714083aa56_72.png",
            "first_name": "Donald",
            "real_name": "Donald Miner",
            "display_name": "don",
            "team": "T286HM2F3",
            "name": "don",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "f22da1fd-704d-40c5-b1f1-f257f371dbdb",
        "type": "message",
        "text": "lol nice",
        "user": "U28TLDP0R",
        "ts": "1551388474.005700",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\n'panels2' is undefined\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 890, in nightly\n    make_tribes()\n  File \".\/nightly.py\", line 319, in make_tribes\n    cardlists=cardlists)\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 308, in make_page\n    f.write(ENV.get_template(template_name).render(repls2))\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 969, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 742, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/_compat.py\", line 36, in reraise\n    raise value.with_traceback(tb)\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 1, in &lt;module&gt;\n    {% extends \"base.html\" %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/base.html\", line 37, in &lt;module&gt;\n    {% block content %}{% endblock %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 6, in &lt;module&gt;\n    {% include 'panels.html' %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/panels.html\", line 5, in &lt;module&gt;\n    &lt;h4 class=\"edhrec2__panel-title\"&gt;{{ panels2.card.title }}&lt;\/h4&gt;\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 397, in getattr\n    return getattr(obj, attribute)\njinja2.exceptions.UndefinedError: 'panels2' is undefined\n",
        "ts": "1551390223.005800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-02-28 21:46:25,388 ERROR 'panels2' is undefined\n2019-02-28 21:46:25,390 ERROR Traceback (most recent call last):\n  File \".\/nightly.py\", line 890, in nightly\n    make_tribes()\n  File \".\/nightly.py\", line 319, in make_tribes\n    cardlists=cardlists)\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 308, in make_page\n    f.write(ENV.get_template(template_name).render(repls2))\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 969, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 742, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/_compat.py\", line 36, in reraise\n    raise value.with_traceback(tb)\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 1, in &lt;module&gt;\n    {% extends \"base.html\" %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/base.html\", line 37, in &lt;module&gt;\n    {% block content %}{% endblock %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 6, in &lt;module&gt;\n    {% include 'panels.html' %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/panels.html\", line 5, in &lt;module&gt;\n    &lt;h4 class=\"edhrec2__panel-title\"&gt;{{ panels2.card.title }}&lt;\/h4&gt;\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 397, in getattr\n    return getattr(obj, attribute)\njinja2.exceptions.UndefinedError: 'panels2' is undefined\n\n```",
        "ts": "1551390223.005900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "client_msg_id": "88f5c03f-af4c-4240-8667-6ab6614c0af2",
        "type": "message",
        "text": "ah shit",
        "user": "U28TLDP0R",
        "ts": "1551390255.006100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1551391303.006200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1551391326.006300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[GOOD] \/usr\/share\/nginx\/html\/sets\/bfz.html has been updated!",
        "ts": "1551394941.006800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[GOOD] \/usr\/share\/nginx\/html\/tribes\/allies.html has been updated!",
        "ts": "1551394941.006900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[GOOD] \/usr\/share\/nginx\/html\/top\/g.html has been updated!",
        "ts": "1551398541.007000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[GOOD] \/usr\/share\/nginx\/html\/commanders\/wubrg.html has been updated!",
        "ts": "1551398541.007100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\nExpecting value: line 1 column 1 (char 0)\nmultiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \".\/nightly.py\", line 501, in make_card\n    cardlists=cardlists\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 204, in make_page\n    {'href': cardview.scryfall_uri, 'value': 'Scryfall'}\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 268, in load\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 319, in loads\n    return _default_decoder.decode(s)\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 895, in nightly\n    make_top_index()\n  File \".\/nightly.py\", line 737, in make_cards\n    def make_cards():\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
        "ts": "1551415741.007200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-03-01 04:51:44,223 ERROR Expecting value: line 1 column 1 (char 0)\n2019-03-01 04:51:44,226 ERROR multiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \".\/nightly.py\", line 501, in make_card\n    cardlists=cardlists\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 204, in make_page\n    {'href': cardview.scryfall_uri, 'value': 'Scryfall'}\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 268, in load\n    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 319, in loads\n    return _default_decoder.decode(s)\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"\/usr\/lib\/python3.5\/json\/decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 895, in nightly\n    make_top_index()\n  File \".\/nightly.py\", line 737, in make_cards\n    def make_cards():\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n```",
        "ts": "1551415741.007300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1551416309.007400",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\n'NoneType' object is not subscriptable\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 899, in nightly\n    make_transform_cards()\n  File \".\/nightly.py\", line 780, in make_transform_cards\n    make_card(card['front'])\n  File \".\/nightly.py\", line 501, in make_card\n    cardlists=cardlists\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 233, in make_page\n    repls['panels'], repls['panels2'] = make_panels(panels, card, name, repls=repls, recentdecks=recentdecks, articles=articles, tribelinks=tribelinks, tribelinks2=tribelinks2, partnercounts=partnercounts)\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 356, in make_panels\n    outpanels2['links'] = make_card_urls2(cardview, url, tribelinks2)\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 174, in make_card_urls2\n    for tribelink in tribelinks['themes']:\nTypeError: 'NoneType' object is not subscriptable\n",
        "ts": "1551416398.007500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-03-01 05:02:41,164 ERROR 'NoneType' object is not subscriptable\n2019-03-01 05:02:41,165 ERROR Traceback (most recent call last):\n  File \".\/nightly.py\", line 899, in nightly\n    make_transform_cards()\n  File \".\/nightly.py\", line 780, in make_transform_cards\n    make_card(card['front'])\n  File \".\/nightly.py\", line 501, in make_card\n    cardlists=cardlists\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 233, in make_page\n    repls['panels'], repls['panels2'] = make_panels(panels, card, name, repls=repls, recentdecks=recentdecks, articles=articles, tribelinks=tribelinks, tribelinks2=tribelinks2, partnercounts=partnercounts)\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 356, in make_panels\n    outpanels2['links'] = make_card_urls2(cardview, url, tribelinks2)\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 174, in make_card_urls2\n    for tribelink in tribelinks['themes']:\nTypeError: 'NoneType' object is not subscriptable\n\n```",
        "ts": "1551416398.007600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "client_msg_id": "dd788045-59d8-4800-a990-6003da202c9f",
        "type": "message",
        "text": "eh right",
        "user": "U28TLDP0R",
        "ts": "1551416418.007900",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "b6855366-d343-4374-801a-1a4a53383f0f",
        "type": "message",
        "text": "this can wait",
        "user": "U28TLDP0R",
        "ts": "1551416420.008100",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-03-01 05:18:47,093 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 622, in make_commander\n    tribelinks2=data['tribelinks2']\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 301, in make_page\n    cardlists=[cardlist.toJSON() for cardlist in cardlists],\nTypeError: 'NoneType' object is not iterable\n```",
        "ts": "1551417364.008200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-03-01 05:19:45,420 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 32, in &lt;module&gt;\n    from edhrec.web.web import make_page, make_redirect\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 301\n    cardlists=[cardlist.toJSON() for cardlist in cardlists if cardlists else None],\n                                                                           ^\nSyntaxError: invalid syntax\n```",
        "ts": "1551417422.008300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-03-01 05:20:11,178 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 622, in make_commander\n    tribelinks2=data['tribelinks2']\n  File \"\/home\/ubuntu\/edhrec\/web\/web.py\", line 309, in make_page\n    f.write(ENV.get_template(template_name).render(repls2))\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 969, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/environment.py\", line 742, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"\/usr\/lib\/python3\/dist-packages\/jinja2\/_compat.py\", line 36, in reraise\n    raise value.with_traceback(tb)\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 1, in &lt;module&gt;\n    {% extends \"base.html\" %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/base.html\", line 37, in &lt;module&gt;\n    {% block content %}{% endblock %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/default2.html\", line 6, in &lt;module&gt;\n    {% include 'panels.html' %}\n  File \"\/home\/ubuntu\/edhrec\/web\/templates\/panels.html\", line 67, in &lt;module&gt;\n    {% for cardlist in cardlists %}\nTypeError: 'NoneType' object is not iterable\n```",
        "ts": "1551417448.008400",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[01\/Mar\/2019:06:46:27] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 299, in route\n    query3 = cards.name_to_url(query)\n  File \"\/home\/ubuntu\/edhrec\/core\/cards.py\", line 547, in name_to_url\n    return cache.get('cards\/' + name)['url']\nKeyError: 'url'\n```",
        "ts": "1551422624.008500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[01\/Mar\/2019:06:46:38] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 299, in route\n    query3 = cards.name_to_url(query)\n  File \"\/home\/ubuntu\/edhrec\/core\/cards.py\", line 547, in name_to_url\n    return cache.get('cards\/' + name)['url']\nKeyError: 'url'\n```",
        "ts": "1551422635.008600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[01\/Mar\/2019:07:23:41] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 299, in route\n    query3 = cards.name_to_url(query)\n  File \"\/home\/ubuntu\/edhrec\/core\/cards.py\", line 547, in name_to_url\n    return cache.get('cards\/' + name)['url']\nKeyError: 'url'\n```",
        "ts": "1551424858.008700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/cfr.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    }
]
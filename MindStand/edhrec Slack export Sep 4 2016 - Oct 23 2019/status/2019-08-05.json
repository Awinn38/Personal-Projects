[
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 08:00:03,982 INFO New Trending 2019-08-05\n\n2019-08-05 08:00:03,988 INFO daily.py took 0:00:00.624146\n```",
        "ts": "1564991982.000400",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 08:08:49,106 INFO cards.py took 0:08:42.773790\n```",
        "ts": "1564992477.000500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 08:13:02,772 INFO New Trending 2019-08-05\n{\"name\": \"Den Protector\", \"s\": [0, 5, 0, 7, 12, 10, 12], \"z\": 1.177122615538741}\n{\"name\": \"Thornbite Staff\", \"s\": [0, 1, 0, 8, 10, 9, 15], \"z\": 1.146393766298116}\n{\"name\": \"Goblin Chieftain\", \"s\": [0, 7, 0, 9, 10, 14, 16], \"z\": 1.1239493438129864}\n{\"name\": \"Valakut, the Molten Pinnacle\", \"s\": [0, 18, 0, 19, 21, 31, 24], \"z\": 1.1230881273064823}\n{\"name\": \"Primordial Sage\", \"s\": [0, 9, 0, 14, 18, 15, 16], \"z\": 1.1150032298295254}\n{\"name\": \"Miren, the Moaning Well\", \"s\": [0, 4, 0, 8, 10, 11, 9], \"z\": 1.1144233131939143}\n{\"name\": \"Willbender\", \"s\": [0, 3, 0, 3, 7, 6, 7], \"z\": 1.1143492728327515}\n{\"name\": \"Hordeling Outburst\", \"s\": [0, 12, 0, 8, 15, 15, 18], \"z\": 1.1137155180680882}\n{\"name\": \"Precursor Golem\", \"s\": [0, 0, 0, 2, 6, 5, 7], \"z\": 1.1133622693005394}\n{\"name\": \"Silent Gravestone\", \"s\": [0, 1, 0, 2, 5, 5, 4], \"z\": 1.0967314319421992}\n2019-08-05 08:13:02,789 INFO daily.py took 0:12:57.082876\n```",
        "ts": "1564992731.000600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 08:13:40,417 INFO backup.py took 0:13:38.041261\n```",
        "ts": "1564992768.000700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 08:38:06,992 INFO archidekt.py took 0:23:17.043893\n```",
        "ts": "1564994235.000800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 09:05:50,492 INFO deckstats.py took 0:25:43.315094\n```",
        "ts": "1564995899.000900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 09:53:50,206 INFO mtggoldfish.py took 0:27:45.105675\n```",
        "ts": "1564998778.001000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 10:37:19,608 INFO update_deckswithprices.py took 0:28:05.137800\nNew deck count from past 2 days: \n- MTGGoldfish: 353\n- Other: 0\n- deckstats: 350\n- Archidekt: 570\n```",
        "ts": "1565001388.001100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 10:46:35,109 INFO cache_get_cards took 0:09:10.529593\n```",
        "ts": "1565001943.001200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1565001947.001300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly completed",
        "ts": "1565013546.001400",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 13:59:59,273 INFO nightly.py took 3:13:19.389920\n```",
        "ts": "1565013547.001500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1565016115.001600",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.4632568413333333E8 (05\/08\/19 14:26:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T14:41:54.467+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T14:41:54.543Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.4632568413333333E8 (05\/08\/19 14:26:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T14:41:54.467+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T14:41:54.543Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[05\/Aug\/2019:14:56:08] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/jsontools.py\", line 58, in json_handler\n    value = cherrypy.serving.request._json_inner_handler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 217, in recjson\n    }, scores=True)\n  File \"\/home\/ubuntu\/edhrec\/core\/recommendations.py\", line 260, in recommend\n    loaded = json.load(f)['matrix']\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 265, in load\n    return loads(fp.read(),\n  File \"\/usr\/lib\/python3.5\/codecs.py\", line 321, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nMemoryError\n```",
        "ts": "1565016917.001700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1565018815.001800",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.3863476093333334E8 (05\/08\/19 15:11:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T15:26:54.460+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T15:26:54.517Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.3863476093333334E8 (05\/08\/19 15:11:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T15:26:54.460+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T15:26:54.517Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[05\/Aug\/2019:15:42:26] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/jsontools.py\", line 58, in json_handler\n    value = cherrypy.serving.request._json_inner_handler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/api\/recs.py\", line 169, in index\n    in_recs, out_recs = recommendations.recommend(data, scores=True)\n  File \"\/home\/ubuntu\/edhrec\/core\/recommendations.py\", line 260, in recommend\n    loaded = json.load(f)['matrix']\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 265, in load\n    return loads(fp.read(),\nMemoryError\n```",
        "ts": "1565019695.001900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[05\/Aug\/2019:15:42:32] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/jsontools.py\", line 58, in json_handler\n    value = cherrypy.serving.request._json_inner_handler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 217, in recjson\n    }, scores=True)\n  File \"\/home\/ubuntu\/edhrec\/core\/recommendations.py\", line 260, in recommend\n    loaded = json.load(f)['matrix']\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 265, in load\n    return loads(fp.read(),\nMemoryError\n```",
        "ts": "1565019700.002000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 15:45:28,114 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 89, in set\n    (key, value, expires)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/extras.py\", line 141, in execute\n    return super(DictCursor, self).execute(query, vars)\npsycopg2.IntegrityError: duplicate key value violates unique constraint \"cache_key_key\"\nDETAIL:  Key (key)=(wp\/by-tag\/cards\/raging goblin) already exists.\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 295, in &lt;module&gt;\n    update_all()\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 286, in update_all\n    _update_tagnames()\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 169, in _update_tagnames\n    [cache.set('wp\/by-tag\/cards\/{}'.format(name_to_tag(n)), n) for n in cards.get_all()]\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 169, in &lt;listcomp&gt;\n    [cache.set('wp\/by-tag\/cards\/{}'.format(name_to_tag(n)), n) for n in cards.get_all()]\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 93, in set\n    with _getcursor() as cur:\n  File \"\/usr\/lib\/python3.5\/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 20, in _getcursor\n    pool = psycopg2.pool.ThreadedConnectionPool(1, 10, user='postgres')\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 161, in __init__\n    self, minconn, maxconn, *args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 58, in __init__\n    self._connect()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 62, in _connect\n    conn = psycopg2.connect(*self._args, **self._kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/__init__.py\", line 130, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.OperationalError: could not fork new process for connection: Cannot allocate memory\n\ncould not fork new process for connection: Cannot allocate memory\n\n```",
        "ts": "1565019881.002100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[05\/Aug\/2019:15:45:32] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/jsontools.py\", line 58, in json_handler\n    value = cherrypy.serving.request._json_inner_handler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 217, in recjson\n    }, scores=True)\n  File \"\/home\/ubuntu\/edhrec\/core\/recommendations.py\", line 260, in recommend\n    loaded = json.load(f)['matrix']\n  File \"\/usr\/lib\/python3.5\/json\/__init__.py\", line 265, in load\n    return loads(fp.read(),\nMemoryError\n```",
        "ts": "1565019881.002200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1565020315.002400",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.6028238069230768E8 (05\/08\/19 15:36:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T15:51:54.454+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T15:51:54.515Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.6028238069230768E8 (05\/08\/19 15:36:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T15:51:54.454+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T15:51:54.515Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[BAD] We now have 2 dynamic.py running. Before we had 5.",
        "ts": "1565021104.002500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1565032915.002600",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.4345884466666666E8 (05\/08\/19 19:06:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T19:21:54.451+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T19:21:54.510Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC NetworkIn\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC NetworkIn\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [1.4345884466666666E8 (05\/08\/19 19:06:00)] was greater than or equal to the threshold (5.0E7).\",\"StateChangeTime\":\"2019-08-05T19:21:54.451+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"NetworkIn\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":5.0E7,\"TreatMissingData\":\"- TreatMissingData:                    missing\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-08-05T19:21:54.510Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 20:03:36,586 INFO cards.py took 0:03:31.200314\n```",
        "ts": "1565035417.002700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1565035425.002800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 20:27:30,690 INFO archidekt.py took 0:23:27.512912\n```",
        "ts": "1565036851.002900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 20:55:28,361 INFO deckstats.py took 0:25:56.728262\n```",
        "ts": "1565038528.003000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 21:43:49,921 INFO mtggoldfish.py took 0:28:05.017328\n```",
        "ts": "1565041430.003100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 22:29:02,279 INFO update_deckswithprices.py took 0:29:30.946623\nNew deck count from past 2 days: \n- Archidekt: 726\n- deckstats: 466\n- MTGGoldfish: 461\n- Other: 0\n```",
        "ts": "1565044142.003200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\ncould not fork new process for connection: Cannot allocate memory\n\ncould not fork new process for connection: Cannot allocate memory\n\nmultiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 501, in make_card\n    data = origin.getcards(card=name)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 71, in getcards\n    data = database.tally(decks, card=card)\n  File \"\/home\/ubuntu\/edhrec\/core\/database.py\", line 2363, in tally\n    num_decks = get_count_by_date(name, released_at, commander=True, tribe=tribe)\n  File \"\/home\/ubuntu\/edhrec\/core\/database.py\", line 975, in get_count_by_date\n    return int(k * cache.get('commanders_table\/{}'.format(carddate))[name][tribe])\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 47, in get\n    with _getcursor() as cur:\n  File \"\/usr\/lib\/python3.5\/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 20, in _getcursor\n    pool = psycopg2.pool.ThreadedConnectionPool(1, 10, user='postgres')\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 161, in __init__\n    self, minconn, maxconn, *args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 58, in __init__\n    self._connect()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 62, in _connect\n    conn = psycopg2.connect(*self._args, **self._kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/__init__.py\", line 130, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.OperationalError: could not fork new process for connection: Cannot allocate memory\n\ncould not fork new process for connection: Cannot allocate memory\n\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 938, in nightly\n    make_cards()\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 782, in make_cards\n    pool.map(make_card, cards.get_all(transform=False, split=False))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\npsycopg2.OperationalError: could not fork new process for connection: Cannot allocate memory\n\ncould not fork new process for connection: Cannot allocate memory\n\n",
        "ts": "1565046366.003300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 23:06:05,499 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 295, in &lt;module&gt;\n    update_all()\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 282, in update_all\n    _get_multipage('posts')\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 64, in _get_multipage\n    cache.set('wp\/by-id\/{}\/{}'.format(endpoint, item['id']), item)\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 86, in set\n    with _getcursor() as cur:\n  File \"\/usr\/lib\/python3.5\/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 20, in _getcursor\n    pool = psycopg2.pool.ThreadedConnectionPool(1, 10, user='postgres')\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 161, in __init__\n    self, minconn, maxconn, *args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 58, in __init__\n    self._connect()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/pool.py\", line 62, in _connect\n    conn = psycopg2.connect(*self._args, **self._kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/__init__.py\", line 130, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\npsycopg2.InterfaceError: only protocol 3 supported\n```",
        "ts": "1565046366.003400",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-05 23:06:06,556 INFO nightly.py took 3:02:21.281383\n```",
        "ts": "1565046366.003500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-06 00:08:52,676 INFO cards.py took 0:08:47.210151\n```",
        "ts": "1565050132.003600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-06 00:35:44,810 INFO archidekt.py took 0:24:44.954286\n```",
        "ts": "1565051744.003700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-06 01:03:27,065 INFO deckstats.py took 0:25:41.963904\n```",
        "ts": "1565053407.003800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-06 01:52:57,278 INFO mtggoldfish.py took 0:29:00.206796\n```",
        "ts": "1565056377.003900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-06 02:35:15,871 INFO update_deckswithprices.py took 0:27:28.188743\nNew deck count from past 2 days: \n- Archidekt: 522\n- MTGGoldfish: 313\n- Other: 0\n- deckstats: 266\n```",
        "ts": "1565058915.004000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, onlydecks=False, skipdecks=False",
        "ts": "1565058920.004100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly completed",
        "ts": "1565070590.004200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-08-06 05:49:51,827 INFO nightly.py took 3:14:30.893365\n```",
        "ts": "1565070591.004300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    }
]
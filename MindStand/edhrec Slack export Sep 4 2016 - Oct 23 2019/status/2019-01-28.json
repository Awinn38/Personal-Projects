[
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 09:15:17,524 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/contrib\/pyopenssl.py\", line 453, in wrap_socket\n    cnx.do_handshake()\n  File \"\/usr\/lib\/python3\/dist-packages\/OpenSSL\/SSL.py\", line 1716, in do_handshake\n    self._raise_ssl_error(self._ssl, result)\n  File \"\/usr\/lib\/python3\/dist-packages\/OpenSSL\/SSL.py\", line 1456, in _raise_ssl_error\n    _raise_current_error()\n  File \"\/usr\/lib\/python3\/dist-packages\/OpenSSL\/_util.py\", line 54, in exception_from_error_queue\n    raise exception_type(errors)\nOpenSSL.SSL.Error: [('SSL routines', 'ssl3_read_bytes', 'sslv3 alert handshake failure')]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/connectionpool.py\", line 600, in urlopen\n    chunked=chunked)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/connectionpool.py\", line 343, in _make_request\n    self._validate_conn(conn)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/connectionpool.py\", line 839, in _validate_conn\n    conn.connect()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/connection.py\", line 344, in connect\n    ssl_context=context)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/util\/ssl_.py\", line 344, in ssl_wrap_socket\n    return context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/contrib\/pyopenssl.py\", line 459, in wrap_socket\n    raise ssl.SSLError('bad handshake: %r' % e)\nssl.SSLError: (\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert handshake failure')],)\",)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/requests\/adapters.py\", line 449, in send\n    timeout=timeout\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/connectionpool.py\", line 638, in urlopen\n    _stacktrace=sys.exc_info()[2])\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/urllib3\/util\/retry.py\", line 398, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='<http:\/\/articles.edhrec.com|articles.edhrec.com>', port=443): Max retries exceeded with url: \/wp-json\/wp\/v2\/media?per_page=100&amp;page=16 (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert handshake failure')],)\",),))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 295, in &lt;module&gt;\n    update_all()\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 281, in update_all\n    _get_multipage('media')\n  File \"\/home\/ubuntu\/edhrec\/core\/wordpress.py\", line 39, in _get_multipage\n    r = requests.get(url, verify=False)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/requests\/api.py\", line 75, in get\n    return request('get', url, params=params, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/requests\/api.py\", line 60, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/requests\/sessions.py\", line 533, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/requests\/sessions.py\", line 646, in send\n    r = adapter.send(request, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/requests\/adapters.py\", line 514, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='<http:\/\/articles.edhrec.com|articles.edhrec.com>', port=443): Max retries exceeded with url: \/wp-json\/wp\/v2\/media?per_page=100&amp;page=16 (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert handshake failure')],)\",),))\n```",
        "ts": "1548666854.006500",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548678540.006600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548690273.006700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 15:47:42,028 CRITICAL Uncaught exception\nmultiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 39, in _make_commanders_p\n    make_decks_cmdr(cmdr) #, outof=outof): BRAWL, brawl=brawl, tiny=tiny)\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 675, in make_decks_cmdr\n    make_deck(deckurl, simscores=sims[deckurl], outof=outof, brawl=brawl, tiny=tiny)\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 596, in make_deck\n    reccards, rankedcards = recs.recommend(info)\n  File \"\/home\/ubuntu\/edhrec\/core\/recommendations.py\", line 257, in recommend\n    with open(fname) as f:\nFileNotFoundError: [Errno 2] No such file or directory: '\/root\/data\/recdata\/i2i\/jaccard-RW.json'\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 704, in make_commanders\n    pool.map(_make_commanders_p, commanders, skipdecks)\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\nFileNotFoundError: [Errno 2] No such file or directory: '\/root\/data\/recdata\/i2i\/jaccard-RW.json'\n```",
        "ts": "1548690397.006800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "client_msg_id": "5b8c45b4-f6c0-42bb-92f9-05421e6cb035",
        "type": "message",
        "text": ".",
        "user": "U28TLDP0R",
        "ts": "1548690453.007000",
        "team": "T286HM2F3",
        "user_team": "T286HM2F3",
        "source_team": "T286HM2F3",
        "user_profile": {
            "avatar_hash": "2a61603e280e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2016-11-16\/104915990673_2a61603e280ecee0ab38_72.jpg",
            "first_name": "David",
            "real_name": "David Keatts",
            "display_name": "keattz",
            "team": "T286HM2F3",
            "name": "keattz",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548690509.007100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 15:50:41,226 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/code.py\", line 91, in runcode\n    exec(code, self.locals)\n  File \"&lt;console&gt;\", line 1, in &lt;module&gt;\nNameError: name 'make_commanders' is not defined\n```",
        "ts": "1548690577.007200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548690600.007300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 15:55:55,752 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/code.py\", line 91, in runcode\n    exec(code, self.locals)\n  File \"&lt;console&gt;\", line 1, in &lt;module&gt;\n  File \".\/nightly.py\", line 699, in make_commanders\n    del commanders[a]\nKeyError: 'Gorm the Great'\n```",
        "ts": "1548690891.007400",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1548691079.007500",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [93.3583333333372 (28\/01\/19 15:42:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T15:57:58.463+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T15:57:58.504Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [93.3583333333372 (28\/01\/19 15:42:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T15:57:58.463+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T15:57:58.504Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548691446.007600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\ntype object argument after * must be an iterable, not bool\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 821, in nightly\n    make_commanders(skipdecks=skipdecks)\n  File \".\/nightly.py\", line 712, in make_commanders\n    pool.map(partial(_make_commanders_p, *skipdecks), commanders)\nTypeError: type object argument after * must be an iterable, not bool\n",
        "ts": "1548691756.007700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 16:10:20,940 ERROR type object argument after * must be an iterable, not bool\n2019-01-28 16:10:20,944 ERROR Traceback (most recent call last):\n  File \".\/nightly.py\", line 821, in nightly\n    make_commanders(skipdecks=skipdecks)\n  File \".\/nightly.py\", line 712, in make_commanders\n    pool.map(partial(_make_commanders_p, *skipdecks), commanders)\nTypeError: type object argument after * must be an iterable, not bool\n\n```",
        "ts": "1548691756.007800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly failed:\ncan't adapt type 'dict'\nmultiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \".\/nightly.py\", line 41, in _make_commanders_p\n    make_commander(cmdr) #BRAWL, brawl=brawl, tiny=tiny)\n  File \".\/nightly.py\", line 504, in make_commander\n    data = origin.getcommanders(card=name, checktribe=bytribe, tribe=tribe, outof=outof)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 410, in getcommanders\n    decks = get_decks(card, 'commander', filtin, filtout, filters, checktribe, tribe)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 167, in get_decks\n    positives = [database.get_commander(cardnames)]\n  File \"\/home\/ubuntu\/edhrec\/core\/database.py\", line 676, in get_commander\n    _TABLE_PREFIX), (commander,))\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/extras.py\", line 141, in execute\n    return super(DictCursor, self).execute(query, vars)\npsycopg2.ProgrammingError: can't adapt type 'dict'\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 821, in nightly\n    make_commanders(skipdecks=skipdecks)\n  File \".\/nightly.py\", line 712, in make_commanders\n    pool.map(partial(_make_commanders_p, dict(skipdecks=skipdecks)), commanders)\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\npsycopg2.ProgrammingError: can't adapt type 'dict'\n",
        "ts": "1548692117.007900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 16:16:22,484 ERROR can't adapt type 'dict'\n2019-01-28 16:16:22,486 ERROR multiprocessing.pool.RemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \".\/nightly.py\", line 41, in _make_commanders_p\n    make_commander(cmdr) #BRAWL, brawl=brawl, tiny=tiny)\n  File \".\/nightly.py\", line 504, in make_commander\n    data = origin.getcommanders(card=name, checktribe=bytribe, tribe=tribe, outof=outof)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 410, in getcommanders\n    decks = get_decks(card, 'commander', filtin, filtout, filters, checktribe, tribe)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 167, in get_decks\n    positives = [database.get_commander(cardnames)]\n  File \"\/home\/ubuntu\/edhrec\/core\/database.py\", line 676, in get_commander\n    _TABLE_PREFIX), (commander,))\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/psycopg2\/extras.py\", line 141, in execute\n    return super(DictCursor, self).execute(query, vars)\npsycopg2.ProgrammingError: can't adapt type 'dict'\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \".\/nightly.py\", line 821, in nightly\n    make_commanders(skipdecks=skipdecks)\n  File \".\/nightly.py\", line 712, in make_commanders\n    pool.map(partial(_make_commanders_p, dict(skipdecks=skipdecks)), commanders)\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 260, in map\n    return self._map_async(func, iterable, mapstar, chunksize).get()\n  File \"\/usr\/lib\/python3.5\/multiprocessing\/pool.py\", line 608, in get\n    raise self._value\npsycopg2.ProgrammingError: can't adapt type 'dict'\n\n```",
        "ts": "1548692118.008000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548692191.008100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1548708179.008200",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [92.4083333333256 (28\/01\/19 20:27:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T20:42:58.459+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T20:42:58.485Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [92.4083333333256 (28\/01\/19 20:27:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T20:42:58.459+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T20:42:58.485Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1548709979.008300",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.95770179216069 (28\/01\/19 20:57:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T21:12:58.482+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T21:12:58.503Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.95770179216069 (28\/01\/19 20:57:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T21:12:58.482+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T21:12:58.503Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1548713519.008400",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.85979245777906 (28\/01\/19 21:56:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T22:11:58.496+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T22:11:58.530Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.85979245777906 (28\/01\/19 21:56:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T22:11:58.496+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T22:11:58.530Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "",
        "ts": "1548714718.008500",
        "username": "incoming-webhook",
        "bot_id": "B5XN109SM",
        "attachments": [
            {
                "fallback": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.31585201136893 (28\/01\/19 22:16:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T22:31:58.456+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T22:31:58.490Z ",
                "text": "<@channel>   *[Amazon CloudWatch Notification]* \nSubject: ALARM: \"EDHREC CPU\" in US East (N. Virginia)\nMessage: {\"AlarmName\":\"EDHREC CPU\",\"AlarmDescription\":null,\"AWSAccountId\":\"083767677168\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed: 1 datapoint [90.31585201136893 (28\/01\/19 22:16:00)] was greater than or equal to the threshold (90.0).\",\"StateChangeTime\":\"2019-01-28T22:31:58.456+0000\",\"Region\":\"US East (N. Virginia)\",\"OldStateValue\":\"OK\",\"Trigger\":{\"MetricName\":\"CPUUtilization\",\"Namespace\":\"AWS\/EC2\",\"StatisticType\":\"Statistic\",\"Statistic\":\"AVERAGE\",\"Unit\":null,\"Dimensions\":[{\"value\":\"i-0f7f3750e584e120e\",\"name\":\"InstanceId\"}],\"Period\":900,\"EvaluationPeriods\":1,\"ComparisonOperator\":\"GreaterThanOrEqualToThreshold\",\"Threshold\":90.0,\"TreatMissingData\":\"\",\"EvaluateLowSampleCountPercentile\":\"\"}}\nTimestamp: 2019-01-28T22:31:58.490Z ",
                "id": 1,
                "color": "F35A00",
                "fields": [
                    {
                        "title": "Severity",
                        "value": "ALARM",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 22:33:57,956 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 30, in &lt;module&gt;\n    import edhrec.web.origin as origin\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 428\n    outof = outof or 99 -\n                         ^\nSyntaxError: invalid syntax\n```",
        "ts": "1548714772.008600",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 22:34:19,823 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\nAttributeError: module 'nightly' has no attribute 'make_partners'\n```",
        "ts": "1548714794.008700",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 22:49:27,359 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"\/usr\/lib\/python3.5\/code.py\", line 91, in runcode\n    exec(code, self.locals)\n  File \"&lt;console&gt;\", line 1, in &lt;module&gt;\nKeyError: 'manaCost'\n```",
        "ts": "1548715702.008800",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```2019-01-28 22:54:42,263 CRITICAL Uncaught exception\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 779, in make_partner_commanders\n    make_commander(commander)\n  File \"\/home\/ubuntu\/edhrec\/web\/nightly.py\", line 505, in make_commander\n    data = origin.getcommanders(cardses=name, checktribe=bytribe, tribe=tribe, outof=outof)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 440, in getcommanders\n    sampledeck = get_sampledeck(card, data['AllCards'], avgs)\n  File \"\/home\/ubuntu\/edhrec\/web\/origin.py\", line 363, in get_sampledeck\n    if get_coloridentity(card) != [] or get_coloridentity(cardses) != []:\nNameError: name 'cardses' is not defined\n```",
        "ts": "1548716017.008900",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[29\/Jan\/2019:02:11:35] HTTP \nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 56, in get\n    _CACHE[key] = json.loads(rec['value'])\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 91, in __setitem__\n    self.expire(time)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 171, in expire\n    cache_delitem(self, curr.key)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/cache.py\", line 73, in __delitem__\n    del self.__data[key]\nKeyError: 'cards\/commanders'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 294, in route\n    commander_urls = cards.get_commander_urls()\n  File \"\/home\/ubuntu\/edhrec\/core\/cards.py\", line 380, in get_commander_urls\n    return cache.get('cards\/urls\/commanders')\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 58, in get\n    _CACHE[key] = rec['value']\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 91, in __setitem__\n    self.expire(time)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 171, in expire\n    cache_delitem(self, curr.key)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/cache.py\", line 73, in __delitem__\n    del self.__data[key]\nKeyError: 'cards\/commanders'\n[29\/Jan\/2019:02:11:36] HTTP \nTraceback (most recent call last):\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 56, in get\n    _CACHE[key] = json.loads(rec['value'])\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 91, in __setitem__\n    self.expire(time)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 171, in expire\n    cache_delitem(self, curr.key)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/cache.py\", line 73, in __delitem__\n    del self.__data[key]\nKeyError: 'cards\/commanders'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 86, in random\n    url = cards.sanitize_url(random.choice(list(cards.get_commanders().keys())))\n  File \"\/home\/ubuntu\/edhrec\/core\/cards.py\", line 388, in get_commanders\n    return cache.get('cards\/commanders')\n  File \"\/home\/ubuntu\/edhrec\/core\/cache.py\", line 58, in get\n    _CACHE[key] = rec['value']\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 91, in __setitem__\n    self.expire(time)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/ttl.py\", line 171, in expire\n    cache_delitem(self, curr.key)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cachetools\/cache.py\", line 73, in __delitem__\n    del self.__data[key]\nKeyError: 'cards\/commanders'\n```",
        "ts": "1548727830.009000",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "[BAD] \/usr\/share\/nginx\/html\/cards\/capsize.html has not been updated in the past 30 hours",
        "ts": "1548734339.009100",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "```[29\/Jan\/2019:05:30:42] HTTP \nTraceback (most recent call last):\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 630, in respond\n    self._do_respond(path_info)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cprequest.py\", line 689, in _do_respond\n    response.body = self.handler()\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/encoding.py\", line 221, in __call__\n    self.body = self.oldhandler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/lib\/jsontools.py\", line 58, in json_handler\n    value = cherrypy.serving.request._json_inner_handler(*args, **kwargs)\n  File \"\/usr\/local\/lib\/python3.5\/dist-packages\/cherrypy\/_cpdispatch.py\", line 54, in __call__\n    return self.callable(*self.args, **self.kwargs)\n  File \"\/home\/ubuntu\/edhrec\/web\/dynamic.py\", line 165, in recjson\n    }, scores=True)\n  File \"\/home\/ubuntu\/edhrec\/core\/recommendations.py\", line 285, in recommend\n    recs[cardname].append(rank \/ cid_multiplier)\nZeroDivisionError: float division by zero\n```",
        "ts": "1548739776.009200",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    },
    {
        "type": "message",
        "subtype": "bot_message",
        "text": "Nightly started, skipdecks=False",
        "ts": "1548745172.009300",
        "username": "edhrecbot",
        "icons": {
            "emoji": ":robot_face:",
            "image_64": "https:\/\/a.slack-edge.com\/37d58\/img\/emoji_2017_12_06\/apple\/1f916.png"
        },
        "bot_id": "B2867AJ5C"
    }
]